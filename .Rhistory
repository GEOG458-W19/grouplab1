c <- c + 1
}
}
legend(xrange[1], yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1)
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces") %>%
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} %>%
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1)
colors <- rainbow(ncol(test) - 1)
c <- 1
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces")
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
}
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1)
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces")
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
}
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
xrange <- range(test$Year)
colors <- rainbow(ncol(test) - 1)
c <- 1
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces")
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
}
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
provinces_ratio <- function(p1, p2) {
df <- data %>% select("Year", contains(p1), contains(p2)) %>% arrange(desc(Year))
new_col <- if(ncol(df) > 3) { # when p1 or p2 is "Province"
df[[3]]/df[[5]]
} else { # when p1 or p2 is "Province_Output"
df[[2]]/df[[3]]
}
df <- df %>% mutate(Output_Ratio = new_col)
}
test <- provinces_ratio("Liaoning", "Guangdong")
# test2 <- provinces_ratio("Shanghai_Output", "Beijing_Output")
# Create plot of the Output Ratio
plot(test$Year, test$Output_Ratio, type = "b", xlab = "Year", ylab = "Output Ratio", main = "Output Ratio of the Provinces")
# Create plot for each provinces output and enterprise data
# Obtain range for y axis
yrange <- function(df) {
i <- 0
for (j in colnames(df)) {
if (j != "Year" & j != "Output_Ratio" & (range(df[[j]], na.rm = TRUE) > i)) {
i <- range(df[[j]], na.rm = TRUE)
}
}
i
}
xrange <- range(test$Year)
colors <- rainbow(ncol(test) - 1)
c <- 1
graph <- plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces") %>%
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} %>%
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
provinces_ratio <- function(p1, p2) {
df <- data %>% select("Year", contains(p1), contains(p2)) %>% arrange(desc(Year))
new_col <- if(ncol(df) > 3) { # when p1 or p2 is "Province"
df[[3]]/df[[5]]
} else { # when p1 or p2 is "Province_Output"
df[[2]]/df[[3]]
}
df <- df %>% mutate(Output_Ratio = new_col)
}
test <- provinces_ratio("Liaoning", "Guangdong")
# test2 <- provinces_ratio("Shanghai_Output", "Beijing_Output")
# Create plot of the Output Ratio
plot(test$Year, test$Output_Ratio, type = "b", xlab = "Year", ylab = "Output Ratio", main = "Output Ratio of the Provinces")
# Create plot for each provinces output and enterprise data
# Obtain range for y axis
yrange <- function(df) {
i <- 0
for (j in colnames(df)) {
if (j != "Year" & j != "Output_Ratio" & (range(df[[j]], na.rm = TRUE) > i)) {
i <- range(df[[j]], na.rm = TRUE)
}
}
i
}
xrange <- range(test$Year)
colors <- rainbow(ncol(test) - 1)
c <- 1
graph <- plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces") %>%
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} %>%
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
provinces_ratio <- function(p1, p2) {
df <- data %>% select("Year", contains(p1), contains(p2)) %>% arrange(desc(Year))
new_col <- if(ncol(df) > 3) { # when p1 or p2 is "Province"
df[[3]]/df[[5]]
} else { # when p1 or p2 is "Province_Output"
df[[2]]/df[[3]]
}
df <- df %>% mutate(Output_Ratio = new_col)
}
test <- provinces_ratio("Liaoning", "Guangdong")
# test2 <- provinces_ratio("Shanghai_Output", "Beijing_Output")
# Create plot of the Output Ratio
plot(test$Year, test$Output_Ratio, type = "b", xlab = "Year", ylab = "Output Ratio", main = "Output Ratio of the Provinces")
# Create plot for each provinces output and enterprise data
# Obtain range for y axis
yrange <- function(df) {
i <- 0
for (j in colnames(df)) {
if (j != "Year" & j != "Output_Ratio" & (range(df[[j]], na.rm = TRUE) > i)) {
i <- range(df[[j]], na.rm = TRUE)
}
}
i
}
xrange <- range(test$Year)
colors <- rainbow(ncol(test) - 1)
c <- 1
graph <- plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces") %>%
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} %>%
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
graph
---
title: "Changes in the Geography of Chinese Production"
author: "Group 5"
date: "January 25, 2019"
output: html_document
---
```{r setup, include=FALSE}
library(tidyverse)
library(dplyr)
library(tibble)
knitr::opts_chunk$set(echo = TRUE)
# Read in the dataset
obj1 <- read.csv("China_EO_49to17.csv")
data <- as_tibble(obj1)
```
## Part 1 - Understanding our Data
## Part 2 - Exploring and Visualizing the Data
## Part 3 - Modifying the Data
```{r three_first, include=FALSE}
provinces_ratio <- function(p1, p2) {
df <- data %>% select("Year", contains(p1), contains(p2)) %>% arrange(desc(Year))
new_col <- if(ncol(df) > 3) { # when p1 or p2 is "Province"
df[[3]]/df[[5]]
} else { # when p1 or p2 is "Province_Output"
df[[2]]/df[[3]]
}
df <- df %>% mutate(Output_Ratio = new_col)
}
test <- provinces_ratio("Liaoning", "Guangdong")
# test2 <- provinces_ratio("Shanghai_Output", "Beijing_Output")
# Create plot of the Output Ratio
plot(test$Year, test$Output_Ratio, type = "b", xlab = "Year", ylab = "Output Ratio", main = "Output Ratio of the Provinces")
# Create plot for each provinces output and enterprise data
# Obtain range for y axis
yrange <- function(df) {
i <- 0
for (j in colnames(df)) {
if (j != "Year" & j != "Output_Ratio" & (range(df[[j]], na.rm = TRUE) > i)) {
i <- range(df[[j]], na.rm = TRUE)
}
}
i
}
xrange <- range(test$Year)
colors <- rainbow(ncol(test) - 1)
c <- 1
```
### Provinces of Liaoning and Guangdong
```{r province_graph, echo=FALSE}
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces") %>%
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} %>%
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
```
provinces_ratio <- function(p1, p2) {
df <- data %>% select("Year", contains(p1), contains(p2)) %>% arrange(desc(Year))
new_col <- if(ncol(df) > 3) { # when p1 or p2 is "Province"
df[[3]]/df[[5]]
} else { # when p1 or p2 is "Province_Output"
df[[2]]/df[[3]]
}
df <- df %>% mutate(Output_Ratio = new_col)
}
test <- provinces_ratio("Liaoning", "Guangdong")
# test2 <- provinces_ratio("Shanghai_Output", "Beijing_Output")
# Create plot of the Output Ratio
plot(test$Year, test$Output_Ratio, type = "b", xlab = "Year", ylab = "Output Ratio", main = "Output Ratio of the Provinces")
# Create plot for each provinces output and enterprise data
# Obtain range for y axis
yrange <- function(df) {
i <- 0
for (j in colnames(df)) {
if (j != "Year" & j != "Output_Ratio" & (range(df[[j]], na.rm = TRUE) > i)) {
i <- range(df[[j]], na.rm = TRUE)
}
}
i
}
xrange <- range(test$Year)
colors <- rainbow(ncol(test) - 1)
c <- 1
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces") %>%
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} %>%
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces") %>%
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} %>%
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
provinces_ratio <- function(p1, p2) {
df <- data %>% select("Year", contains(p1), contains(p2)) %>% arrange(desc(Year))
new_col <- if(ncol(df) > 3) { # when p1 or p2 is "Province"
df[[3]]/df[[5]]
} else { # when p1 or p2 is "Province_Output"
df[[2]]/df[[3]]
}
df <- df %>% mutate(Output_Ratio = new_col)
}
test <- provinces_ratio("Liaoning", "Guangdong")
# test2 <- provinces_ratio("Shanghai_Output", "Beijing_Output")
# Create plot of the Output Ratio
plot(test$Year, test$Output_Ratio, type = "b", xlab = "Year", ylab = "Output Ratio", main = "Output Ratio of the Provinces")
# Create plot for each provinces output and enterprise data
# Obtain range for y axis
yrange <- function(df) {
i <- 0
for (j in colnames(df)) {
if (j != "Year" & j != "Output_Ratio" & (range(df[[j]], na.rm = TRUE) > i)) {
i <- range(df[[j]], na.rm = TRUE)
}
}
i
}
xrange <- range(test$Year)
colors <- rainbow(ncol(test) - 1)
c <- 1
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces") %>%
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} %>%
legend("topleft", yrange(test)[2], colnames(test)[2:(ncol(test) - 1)], col = colors, lty = 1, bty = "n")
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB", main = "Enterprise and Output of the Provinces")
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
}
legend("topleft", yrange(test)[2], gsub("_", " ", colnames(test)[2:(ncol(test) - 1)]), col = colors, lty = 1, bty = "n")
View(test)
View(obj1)
library(tidyverse)
library(dplyr)
library(tibble)
knitr::opts_chunk$set(echo = TRUE)
# Read in the dataset
obj1 <- read.csv("China_EO_49to17.csv")
data <- as_tibble(obj1)
population <- read.csv("Population.csv")
View(population)
population <- read.csv("Population.csv")
typeof(population$ï..Year)
population <- read.csv("Beijing Population.csv", header = TRUE)
typeof(population$ï..Year)
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE)
---
title: "Changes in the Geography of Chinese Production"
author: "Group 5"
date: "January 25, 2019"
output: html_document
---
```{r setup, include=FALSE}
library(tidyverse)
library(dplyr)
library(tibble)
knitr::opts_chunk$set(echo = TRUE)
# Read in the dataset
obj1 <- read.csv("China_EO_49to17.csv")
data <- as_tibble(obj1)
```
## Part 1 - Understanding our Data
## Part 2 - Exploring and Visualizing the Data
## Part 3 - Modifying the Data
```{r three_first, include=FALSE, warning=FALSE}
provinces_ratio <- function(p1, p2) {
df <- data %>% select("Year", contains(p1), contains(p2)) %>% arrange(desc(Year))
new_col <- if(ncol(df) > 3) { # when p1 or p2 is "Province"
df[[3]]/df[[5]]
} else { # when p1 or p2 is "Province_Output"
df[[2]]/df[[3]]
}
df <- df %>% mutate(Output_Ratio = new_col)
}
test <- provinces_ratio("Liaoning", "Guangdong")
# test2 <- provinces_ratio("Shanghai_Output", "Beijing_Output")
# Create plot for each provinces output and enterprise data
# Obtain range for y axis
yrange <- function(df) {
i <- 0
for (j in colnames(df)) {
if (j != "Year" & j != "Output_Ratio" & (range(df[[j]], na.rm = TRUE) > i)) {
i <- range(df[[j]], na.rm = TRUE)
}
}
i
}
xrange <- range(test$Year)
colors <- rainbow(ncol(test) - 1)
c <- 1
```
### Provinces of Liaoning and Guangdong
```{r province_graph, echo=FALSE, warning=FALSE}
# Create plot of the Output Ratio
plot(test$Year, test$Output_Ratio, type = "b", xlab = "Year", ylab = "Output Ratio", main = "Output Ratio of the Provinces", col="black")
# Create plot of the Provinces
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB")
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
}
legend("topleft", yrange(test)[2], gsub("_", " ", colnames(test)[2:(ncol(test) - 1)]), col = colors, lty = 1, bty = "n")
```
### 3.4
Beijing's Population From 1949 to 2017 (data obtained from [All China Data Center](https://www.china-data-online.com/member/macroyr/macroyrtshow.asp))
```{r, echo = FALSE, warning = FALSE}
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE)
```
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE)
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE)
View(beijing_pop)
beijing_pop$ï..Year[1]
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
beijing_pop$ï..Year[1]
typeof(beijing_pop$ï..Year[1])
plot(beijing_pop$ï..Year, beijing_pop$Total_Permanent_Population_Year_End_10000_Persons, type = "n", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing's Population")
plot(beijing_pop[[1]], beijing_pop$Total_Permanent_Population_Year_End_10000_Persons, type = "n", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing's Population")
beijing_pop <- read_csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
beijing_pop <- read_csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
beijing_pop <- read_csv("Beijing Population.csv")
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
beijing_pop$ï..Year <- seq(1949:2017)
beijing_pop$ï..Year <- 1949:2017
names(beijing_pop)[1] <- "Year"
beijing_pop$Year <- 1949:2017
plot(beijing_pop$Year, beijing_pop$Total_Permanent_Population_Year_End_10000_Persons, type = "n", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing's Population")
plot(beijing_pop$Year, beijing_pop$Total_Permanent_Population_Year_End_10000_Persons, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing's Population")
china_pop <- read.csv("National Population.csv", header = TRUE, stringsAsFactors = FALSE)
View(china_pop)
names(china_pop)[1] <- "Year"
china_pop$Year <- 1949:2017
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
china_pop <- read.csv("National Population.csv", header = TRUE, stringsAsFactors = FALSE)
# Fix Year column in datasets
names(beijing_pop)[1] <- "Year"
beijing_pop$Year <- 1949:2017
names(china_pop)[1] <- "Year"
china_pop$Year <- 1949:2017
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
china_pop <- read.csv("National Population.csv", header = TRUE, stringsAsFactors = FALSE)
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
china_pop <- read.csv("National Population.csv", header = TRUE, stringsAsFactors = FALSE)
# Fix Year column in datasets
names(beijing_pop)[1] <- "Year"
beijing_pop$Year <- 1949:2017
names(china_pop)[1] <- "Year"
china_pop$Year <- 1949:2017
# Append Nat/Beijing for column names and join into one population dataset
population <- left_join(china_pop, beijing_pop, by = "Year", suffix = c("_Nat", "_Beijing"))
View(population)
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing vs National Population") +
line(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Beijing, type = "l", col = "blue")
# Append Nat/Beijing for column names and join into one population dataset
population <- left_join(china_pop, beijing_pop, by = "Year", suffix = c("_Nat", "_Beijing"))
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing vs National Population") +
line(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Beijing, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Beijing, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Beijing, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "blue")
plot(population$Year, 60000, type = "n", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "red") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Beijing, type = "l", col = "blue")
plot(population$Year, 1:60000, type = "n", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "red") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Beijing, type = "l", col = "blue")
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Beijing, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "n", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "red") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Beijing, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "n", xlab = "Year", ylab = "Per 10,000 Person", main = "Beijing vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "blue")
shandong_pop <- read.csv("Shandong Population.csv", header = TRUE, stringsAsFactors = FALSE)
guangdong_pop <- read.csv("Guangdong Population.csv", header = TRUE, stringsAsFactors = FALSE)
View(guangdong_pop)
View(shandong_pop)
# Fix Year column in datasets
names(beijing_pop)[1] <- "Year"
beijing_pop$Year <- 1949:2017
names(china_pop)[1] <- "Year"
china_pop$Year <- 1949:2017
names(shandong_pop)[1] <- "Year"
shandong_pop$Year <- 1949:2017
names(guangdong_pop)[1] <- "Year"
guangdong_pop$Year <- 1949:2017
library(dplyr)
# Append Nat/Beijing for column names and join into one population dataset
population <- china_pop %>% left_join(shandong_pop, by = "Year") %>% left_join(guangdong_pop, by = "Year")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "black", xlab = "Year", ylab = "Per 10,000 Person", main = "Province vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "red") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "black", xlab = "Year", ylab = "Per 10,000 Person", main = "Province vs National Population")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "black", xlab = "Year", ylab = "Per 10,000 Person", main = "Province vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "red") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Nat, type = "l", col = "black", xlab = "Year", ylab = "Per 10,000 Person", main = "Province vs National Population")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons, type = "l", col = "black", xlab = "Year", ylab = "Per 10,000 Person", main = "Province vs National Population")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons, type = "l", col = "black", xlab = "Year", ylab = "Per 10,000 Person", main = "Province vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "red") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons, type = "n", col = "black", xlab = "Year", ylab = "Per 10,000 Person", main = "Province vs National Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "red") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Shandong vs Guangzhou Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, type = "l", col = "blue")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Shandong vs Guangzhou Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "blue") +
legend("topleft")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Shandong vs Guangzhou Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "blue") +
legend("topleft", legend = c("Guangdong", "Shandong"))
# Create plot of the Provinces
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB") +
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
} +
legend("topleft", yrange(test)[2], gsub("_", " ", colnames(test)[2:(ncol(test) - 1)]), col = colors, lty = 1, bty = "n")
plot(xrange, yrange(test), type = "n", xlab = "Year", ylab = "Per 100 Million RMB")
for (i in colnames(test)) {
if (i != "Year" & i != "Output_Ratio") {
lines(test$Year[!is.na(test[[i]])], test[[i]][!is.na(test[[i]])],
type = "l", col = colors[c])
c <- c + 1
}
}
legend("topleft", yrange(test)[2], gsub("_", " ", colnames(test)[2:(ncol(test) - 1)]), col = colors, lty = 1, bty = "n")
plot(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, type = "l", col = "red", xlab = "Year", ylab = "Per 10,000 Person", main = "Shandong vs Guangzhou Population") +
lines(population$Year, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong, type = "l", col = "blue") +
legend("topleft", legend = c("Guangdong", "Shandong"), col = c("red", "blue"))
