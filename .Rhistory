ggplot(data = na.omit(recent_ratio_df), aes(x = Year)) +
geom_line(aes(y = Output_Ratio_Liao_Guang, color = "Liaoning vs Guangdong Output Ratio")) +
geom_line(aes(y = Output_Ratio_Shan_Guang, color = "Shandong vs Guangdong Output Ratio")) +
geom_line(aes(y = Output_Ratio_Shang_Guang, color = "Shanghai vs Guangdong Output Ratio")) +
labs(y = "Output Ratio", colour = "Provinces") +
ggtitle("A Closer Look: Output Ratios of Provinces (1980 to 2017)")
# Calculate max/min of the output ratios
lgrange <- range(ratio_df$Output_Ratio_Liao_Guang)
---
title: "Changes in the Geography of Chinese Production"
author: "Group 5 (Justin Han, Wendy Liang, Rachel Paresa, Alec Raines, Denny Wang)"
date: "January 25, 2019"
output: html_document
---
```{r setup, include=FALSE}
library(tidyverse)
library(dplyr)
library(tibble)
knitr::opts_chunk$set(echo = TRUE)
# Read in the dataset
obj1 <- read.csv("China_EO_49to17.csv")
data <- as_tibble(obj1)
```
## Part 1 - Understanding our Data {.tabset .tabset-fade}
###How China is Governed
China is the most populous country in the world. Due to this it requires an extensive governmental network to manage its citizens across its 3.7 million square miles of land. To conquer this, China has four administrative divisions:
* China's Administrative Divisions ( [Provinces of China](https://en.wikipedia.org/wiki/Provinces_of_China#Types_of_provincial-level_divisions))
+ 22 Provinces
+ 5 Autonomous Regions
+ 4 Centrally Administered Municipalities
+ 2 Special Administrative Regions
+ 1 Province
Cities such as Beijing, Shanghai, Tianjin, and Chongqing are municipalities.
> In China, municipalities directly under the juristiction of the central government are under direct leadership of the central government, and they are equal to the provincial level in terms of administrative hierarchy. These municipalities directly under the juristiction of the central government have the characters of both provinces and independent cities. They have special administrative powers that other normal cities do not have, and they can enjoy special policies and preferential treatment that are absent to other cities ( ["13.2.2.1"](https://books.google.com/books?id=-BZaKxYWykQC&pg=PA337&lpg=PA337&dq=china+municipalities&source=bl&ots=6teLWLv8F2&sig=NtSbnqeIxGIWACvLwbE5XxrOUvo&hl=en&sa=X&ved=2ahUKEwjp7tTijfPfAhWO11QKHZI1CCs4FBDoATAIegQIABAB#v=onepage&q=Green%20Investment%20of%20Four%20Municipalities&f=false) ).
Looking deeper into the dataset, some readers may find that there are regions or locations in China that are missing off of this dataset. Some of those places include Taiwan, Hong Kong, and Macao. This stems from the "One Country, Two Systems" plan China made in 1984. China deemed that regions that operated independently before this time, would cease to be independent regions, and fall under the Chinese borders. However, Macao and Hong Kong were capitalist regions that contradicted China's socialist system. Therefore, these would fall under Chinese soverignty, and be deemed as Special Administrative Regions. These regions social, economic, legal systems, and way of life would remain unchanged, it would only fall within Chinese territory ( [One Country, Two Systems](http://www.china.org.cn/english/features/dengxiaoping/103372.htm)). The difference in systems results in statistics from these locations to be not in the same dataset as the rest of China. Also, it wasn't until China's 2010 Census for data to be collected and hosted from China. You can find data on these Special Administrative Regions on the [National Bureau of Statistics of China](http://www.stats.gov.cn/english/Statisticaldata/AnnualData/). When searching for data, Speical Administrative Regions will not be with the rest of China's statistics, they will be located at the end of the data book in Chapters 26 (Hong Kong), 27 (Macao), 28 (Taiwan).
###Issues with Chinese Statistics
China obtains national statistics from the Chinese Census that occurs every 5 years. It is a large undertaking that "employs 3 million people, counted more than 8 million enterprises and estimated a GDP of almost 59 trillion yuan ($9.5 trillion)". However with this many people working on such a large venture, there are many scandals surrounding the census on the basis of incorrect data being collected. The Chinese National Bureau of Statistics "draw on the data reported directly to it by large enterprises (those with annual revenues of over 20 million yuan). But it remains largely in the dark about smaller firms." A majority of these large companies are owned-by the state, which can lead to misrepresentation when it comes time to submitting statistics. Issues also arrive when it comes to the pure size of China, "industrial profits recently reported by large enterprises were lower than reported last year because some under-sized and double-counted firms were purged from the sample". The Census is also a very political subject. This data become public to all outside governments, so the census is a representation of how the country is doing. This means that "census-takers succumb to political pressure, faking information" to try and bump up the statistics of their own country ( [The critics it deserves; Free Exchange](https://www.economist.com/finance-and-economics/2018/07/07/chinas-statistics-are-bad-many-criticisms-of-them-are-worse)). All of these considered, data collected off of the Chinese National Bureau of Statistics should be double checked for accuracy if possible due to multiple reports of faking data. Especially within the more recent times, data has been reported to be faked from the 90s and even more recently from the 2008 Financial Crisis to present day ( [Hsu, Sara](www.forbes.com/sites/sarahsu/2017/01/23/chinas-gdp-numbers-can-we-trust-the-data/#50ccad006577)). Furthermore, private firms who are less likely to bend to political pressure are a key source to go to for statistics. For example, the All China Data Center is a firm who aggregates data from various sources to ensure the most accurate data available.
###Citations
["13.2.2.1 Green Investment of Four Municipalities Directly Under the Jurisdiction of the Central Government." China Green Development Index Report 2011, by Xiaoxi Li and Jiancheng Pan, Springer Science & Business Media, 2012, p. 337.](https://books.google.com/books?id=-BZaKxYWykQC&pg=PA337&lpg=PA337&dq=china+municipalities&source=bl&ots=6teLWLv8F2&sig=NtSbnqeIxGIWACvLwbE5XxrOUvo&hl=en&sa=X&ved=2ahUKEwjp7tTijfPfAhWO11QKHZI1CCs4FBDoATAIegQIABAB#v=onepage&q=Green%20Investment%20of%20Four%20Municipalities&f=false)
[Hsu, Sara. "China's GDP Numbers: Can We Trust The Data?" Forbes, Forbes Magazine, 23 Jan. 2017, www.forbes.com/sites/sarahsu/2017/01/23/chinas-gdp-numbers-can-we-trust-the-data/#50ccad006577.](www.forbes.com/sites/sarahsu/2017/01/23/chinas-gdp-numbers-can-we-trust-the-data/#50ccad006577)
["One Country, Two Systems." China.org.cn, China.org, www.china.org.cn/english/features/dengxiaoping/103372.htm.](http://www.china.org.cn/english/features/dengxiaoping/103372.htm)
["Provinces of China." Wikipedia, Wikimedia Foundation, 22 Jan. 2019, en.wikipedia.org/wiki/Provinces_of_China#Types_of_provincial-level_divisions.](https://en.wikipedia.org/wiki/Provinces_of_China#Types_of_provincial-level_divisions)
["The critics it deserves; Free exchange." The Economist 7 July 2018: 63(US). Business Insights: Global. Web. 23 Jan. 2019.](https://www.economist.com/finance-and-economics/2018/07/07/chinas-statistics-are-bad-many-criticisms-of-them-are-worse)
## Part 2 - Exploring and Visualizing the Data {.tabset .tabset-fade}
## Part 3 - Modifying the Data {.tabset .tabset-fade}
###3.1
Here we have output ratio comparisons of Liaoning, Shandong, and Shanghai in contrast with Guangdong. These four provinces lives along China's east coast from the north to the south end. In terms of size, Shanghai stands as the smallest province among the four.
```{r three_first, echo = FALSE, include = TRUE, warning = FALSE}
# Automates an output ratio column based upon the provinces passed
provinces_ratio <- function(p1, p2) {
df <- data %>% select("Year", contains(p1), contains(p2)) %>% arrange(desc(Year))
new_col <- if(ncol(df) > 3) { # when p1 or p2 is "Province"
df[[3]] / df[[5]]
} else { # when p1 or p2 is "Province_Output"
df[[2]] / df[[3]]
}
df <- df %>% mutate(Output_Ratio = new_col)
}
liao_guang_ratio <- provinces_ratio("Liaoning", "Guangdong")
shan_guang_ratio <- provinces_ratio("Shandong", "Guangdong")
shang_guang_ratio <- provinces_ratio("Shanghai", "Guangdong")
shang_bei_ratio <- provinces_ratio("Shanghai_Output", "Beijing_Output")
ratio_df <- left_join(liao_guang_ratio, shan_guang_ratio, by = c("Year", "Guangdong_Enterprise", "Guangdong_Output"), suffix = c("_Liao_Guang", "_Shan_Guang")) %>%
left_join(shang_guang_ratio, by = c("Year", "Guangdong_Enterprise", "Guangdong_Output")) %>%
left_join(shang_bei_ratio, by = "Year", suffix = c("_Shang_Guang", "_Shang_Bei"))
# Create plot of the Output Ratio
ggplot(data = na.omit(ratio_df), aes(x = Year)) +
geom_line(aes(y = Output_Ratio_Liao_Guang, color = "Liaoning vs Guangdong Output Ratio")) +
geom_line(aes(y = Output_Ratio_Shan_Guang, color = "Shandong vs Guangdong Output Ratio")) +
geom_line(aes(y = Output_Ratio_Shang_Guang, color = "Shanghai vs Guangdong Output Ratio")) +
labs(y = "Output Ratio", colours = "Provinces") +
ggtitle("Output Ratios of Provinces")
recent_ratio_df <- ratio_df %>% filter(Year >= 1980)
# Create plot of the Output Ratio from 1980 onwards
ggplot(data = na.omit(recent_ratio_df), aes(x = Year)) +
geom_line(aes(y = Output_Ratio_Liao_Guang, color = "Liaoning vs Guangdong Output Ratio")) +
geom_line(aes(y = Output_Ratio_Shan_Guang, color = "Shandong vs Guangdong Output Ratio")) +
geom_line(aes(y = Output_Ratio_Shang_Guang, color = "Shanghai vs Guangdong Output Ratio")) +
labs(y = "Output Ratio", colour = "Provinces") +
ggtitle("A Closer Look: Output Ratios of Provinces (1980 to 2017)")
# Calculate max/min of the output ratios
lgrange <- range(ratio_df$Output_Ratio_Liao_Guang)
```
From the charts we can see that the output ratio for Shanghai/Guangdong starts off at the highest point
###3.2
```{r echo = FALSE, warning = FALSE}
#load up china data
china_data = read.csv("China_EO_49to17.csv")
#create new data frame using china_data to add 2 columns of data, National_Output/Enterprise_Total. uses select()function to select data for output/enterprise
#and then rowSums() function used on selected data with na.rm=TRUE so it excludes NA data.
china_data2 <- mutate(china_data,
National_Output_Total = rowSums(select(china_data, contains('Output')), na.rm = TRUE),
National_Enterprise_Total = rowSums(select(china_data, contains('Enterprise')), na.rm = TRUE))
#adds shares of total columns for output and enteprise for 3 provinces
china_data3 <- mutate(china_data2,
Beijing_Enterprise_Share = Beijing_Enterprise / National_Enterprise_Total,
Beijing_Output_Share = Beijing_Output / National_Output_Total,
Tianjin_Enterprise_Share = Tianjin_Enterprise / National_Enterprise_Total,
Tianjin_Output_Share = Tianjin_Output / National_Output_Total,
Hebei_Enterprise_Share = Hebei_Enterprise / National_Enterprise_Total,
Hebei_Output_Share = Hebei_Output / National_Output_Total)
#creates line graphs comparing the shares of total columns for enterprise
ggplot(data=china_data3, aes(x=Year)) +
geom_line(mapping = aes(y=Beijing_Enterprise_Share, color="Beijing Enterprise Share")) +
geom_line(mapping = aes(y=Tianjin_Enterprise_Share, color="Tianjin Enterprise Share")) +
geom_line(mapping = aes(y=Hebei_Enterprise_Share, color="Hebei Enterprise Share")) +
ggtitle("Enterprise Shares of Total") +
labs(y="Enterprise", colour = "Provinces")
```
For the Enterprise Shares of Total graph, it represents data for three provinces for the number of enterprises they had over the years compared to the national enterprise total. For Beijing, they made up a larger portion of the total number of enterprises in the country but the amount fell off dramatically over the years. Tianjin remained pretty low but followed the same pattern as Beijing after ~1950. Hebei started off low but increased after ~1950 and has remained ahead of Beijing and Tianjin with the number of enteprises they have compared to the national total.
```{r echo = FALSE, warning = FALSE}
#creates line graphs comparing the shares of total columns for output
ggplot(data=china_data3, aes(x=Year)) +
geom_line(mapping = aes(y=Beijing_Output_Share, color="Beijing Output Share")) +
geom_line(mapping = aes(y=Tianjin_Output_Share, color="Tianjin Output Share")) +
geom_line(mapping = aes(y=Hebei_Output_Share, color="Hebei Output Share")) +
ggtitle("Output Shares of Total") +
labs(y="Output", colour = "Provinces")
```
For the Output Shares of Total graph, it represents data for the same three provicnes but it compares their output to the national output total. For all three provinces, their output compared to the national total is very low until around 2010 when they all spike up dramatically. Comapring the outputs to the previous graph with the enterprises, The amount of enterprises seems to have little correlation with the amount of output each province has. For Beijing, their enterprise per share was very high at the start and went down but their output stayed low throughout that time. At around 2000, the enterprise per share for Tianjin and Beijing starts to decrease but despite that, their output share increases dramatically. For Heibei, their enterprise share actually increases during that time but their output share is less compared to Beijing and Tianjin. This could be due to low output per enterprise until after 2010 but the output per enterprise for Heibei did not increase at the same rate as Beijing and Tianjin.
###3.3
```{r echo = FALSE, warning = FALSE}
#creates columns for output per enterprise
china_output_per_enterprise_data <- mutate(china_data2,
Beijing_Output_Per_Enterprise = Beijing_Output / Beijing_Enterprise,
Tianjin_Output_Per_Enterprise = Tianjin_Output / Tianjin_Enterprise,
Hebei_Output_Per_Enterprise = Hebei_Output / Hebei_Enterprise)
#creates graph for output per enterprise
ggplot(data = china_output_per_enterprise_data, aes(x = Year)) +
geom_line(mapping = aes(y = Beijing_Output_Per_Enterprise, color = "Beijing Output Per Enterprise")) +
geom_line(mapping = aes(y = Tianjin_Output_Per_Enterprise, color = "Tianjin Output Per Enterprise")) +
geom_line(mapping = aes(y = Hebei_Output_Per_Enterprise, color = "Hebei Output Per Enterprise")) +
ggtitle("Output Per Enterprise") +
labs(y = "Output", colour = "Provinces")
```
For the Output Per Enterprise graph, it represents data for the same provinces, but it shows the amount of output per enterprise for each province throughout the years. This graph explains the results of the previous two graphs because it shows how incredibly low each enterpises output was until around 1995 where it started to dramatically increase until the last year the data was collected. This explains the increases in output compared to the national output total despite the decrease in enterprises for Beijing and Tianjin. For Heibei, their output per enteprise did not increase as much as the other two and actually starts to fall off at the end which is why that despite their higher enterprise share then the other two, their output share is less. These changes could be due to enterprises becoming more efficient and productive due to a number of reasons like technology, policy, economy, etc. Another factor could be the number of enterprises have decreased due to other enterprises outcompeting or consolidating them and thus increasing their individual outputs despite the decrease in enterprises.
### 3.4
Beijing's Population From 1949 to 2017 (data obtained from [All China Data Center](https://www.china-data-online.com/member/macroyr/macroyrtshow.asp))
```{r, echo = FALSE, warning = FALSE}
beijing_pop <- read.csv("Beijing Population.csv", header = TRUE, stringsAsFactors = FALSE)
shandong_pop <- read.csv("Shandong Population.csv", header = TRUE, stringsAsFactors = FALSE)
guangdong_pop <- read.csv("Guangdong Population.csv", header = TRUE, stringsAsFactors = FALSE)
china_pop <- read.csv("National Population.csv", header = TRUE, stringsAsFactors = FALSE)
# Fix Year column in datasets
names(china_pop)[1] <- "Year"
china_pop$Year <- 1949:2017
names(shandong_pop)[1] <- "Year"
shandong_pop$Year <- 1949:2017
names(guangdong_pop)[1] <- "Year"
guangdong_pop$Year <- 1949:2017
names(beijing_pop)[1] <- "Year"
beijing_pop$Year <- 1949:2017
# Join into one big population dataset
population <- china_pop %>% left_join(shandong_pop, by = "Year") %>% left_join(guangdong_pop, by = "Year") %>% left_join(beijing_pop, by = "Year", suffix =  c("", "_Beijing"))
ggplot(data = population, aes(x = Year)) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons, color = "China's Total Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Shandong, color = "Shandong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Guangdong, color = "Guangdong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Beijing, color = "Beijing's Population")) +
ggtitle("Province vs Total Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
```
# Calculate max/min of the output ratios
lgrange <- range(ratio_df$Output_Ratio_Liao_Guang)
# Calculate max/min of the output ratios
lgrange <- range(ratio_df$Output_Ratio_Liao_Guang, na.rm = TRUE)
sggrange <- range(ratio_df$Output_Ratio_Shan_Guang, na.rm = TRUE)
sigrange <- range(ratio_df$Output_Ratio_Shang_Guang, na.rm = TRUE)
ratio_df[Year == 1949, Output_Ratio_Shang_Guang]
ratio_df[Year == 1949, "Output_Ratio_Shang_Guang"]
ratio_df["Year" == 1949, "Output_Ratio_Shang_Guang"]
ratio_df["Year" == "1949", "Output_Ratio_Shang_Guang"]
ratio_df[ratio_df$Year == 1949, "Output_Ratio_Shang_Guang"]
ratio_df[ratio$Output_Ratio_Shang_Guang == sigrange[2], Year]
ratio_df[ratio$Output_Ratio_Shang_Guang == sigrange[2], ]
ratio_df[ratio_df$Output_Ratio_Shang_Guang == sigrange[2], ]
sigrange[2]
ratio_df[ratio_df$Output_Ratio_Shang_Guang == sigrange[2], Year]
ratio_df[ratio_df$Output_Ratio_Shang_Guang == sigrange[2], ratio_df$Year]
ratio_df[, ratio_df$Output_Ratio_Shang_Guang == sigrange[2]]
sigrange
sigrange[1]
sigrange[2]
ratio_df$Output_Ratio_Shang_Guang == sigrange[2]
ratio_df[, ratio_df$Output_Ratio_Shang_Guang == sigrange[2]]
ratio_df[atio_df$Output_Ratio_Shang_Guang == sigrange[2], ]
ratio_df[ratio_df$Output_Ratio_Shang_Guang == sigrange[2], ]
ratio_df[ratio_df$Output_Ratio_Shang_Guang == sigrange[2], ]$Year
ratio_df[ratio_df$Output_Ratio_Shang_Guang == sigrange[2], "Year"]
typeof(sigrange)
sigrange
sigrange[2]
typeof(sigrange[2])
ratio_df$Output_Ratio_Shang_Guang
typeof(ratio_df$Output_Ratio_Shan_Guang)
ratio_df$Output_Ratio_Shang_Guang == sigrange[2]
typeof(ratio_df$Output_Ratio_Shang_Guang == sigrange[2])
ratio_df[na.omit(ratio_df$Output_Ratio_Shang_Guang == sigrange[2]), "Year"]
round(ratio_df[na.omit(ratio_df$Output_Ratio_Shang_Guang == sigrange[2]), "Year"], 2)
range(ratio_df$Output_Ratio_Liao_Guang, na.rm = TRUE) %>% round(2)
# Just output ratio columns
oratio <- ratio_df %>% select(contains("Output_Ratio"))
View(oratio)
# Just output ratio columns
oratio <- ratio_df %>% select(Year, contains("Output_Ratio"))
# Just output ratio columns
oratio <- ratio_df %>% select(Year, contains("Output_Ratio"), -Output_Ratio_Shang_Bei)
# Just output ratio columns
oratio <- ratio_df %>% select(Year, contains("Output_Ratio"), -Output_Ratio_Shang_Bei)
shandong_pop <- read.csv("Shandong Population.csv", header = TRUE, stringsAsFactors = FALSE)
guangdong_pop <- read.csv("Guangdong Population.csv", header = TRUE, stringsAsFactors = FALSE)
china_pop <- read.csv("National Population.csv", header = TRUE, stringsAsFactors = FALSE)
# Fix Year column in datasets
names(china_pop)[1] <- "Year"
china_pop$Year <- 1949:2017
names(shandong_pop)[1] <- "Year"
shandong_pop$Year <- 1949:2017
names(guangdong_pop)[1] <- "Year"
guangdong_pop$Year <- 1949:2017
# Join into one big population dataset
population <- china_pop %>% left_join(shandong_pop, by = "Year") %>% left_join(guangdong_pop, by = "Year")
ggplot(data = population, aes(x = Year)) +
# geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons, color = "China's Total Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Shandong, color = "Shandong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Guangdong, color = "Guangdong's Population")) +
ggtitle("Province vs Total Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
View(guangdong_pop)
colnames(guangdong_pop)
setwd("D:/Wendy/Google Drive/UW/2018-19/GEOG458/grouplab1")
library(tidyverse)
library(dplyr)
library(tibble)
knitr::opts_chunk$set(echo = TRUE)
# Read in the dataset
obj1 <- read.csv("China_EO_49to17.csv")
data <- as_tibble(obj1)
liaoning_pop <- read.csv("Liaoning Population.csv", header = TRUE, stringsAsFactors = FALSE)
View(liaoning_pop)
# Join into one big population dataset
population <- china_pop %>% left_join(shandong_pop, by = "Year") %>% left_join(guangdong_pop, by = "Year") %>% left_join(liaoning_pop, by = "Year")
View(population)
liaoning_pop <- read.csv("Liaoning Population.csv", header = TRUE, stringsAsFactors = FALSE)
shandong_pop <- read.csv("Shandong Population.csv", header = TRUE, stringsAsFactors = FALSE)
guangdong_pop <- read.csv("Guangdong Population.csv", header = TRUE, stringsAsFactors = FALSE)
china_pop <- read.csv("National Population.csv", header = TRUE, stringsAsFactors = FALSE)
# Fix Year column in datasets
names(china_pop)[1] <- "Year"
china_pop$Year <- 1949:2017
names(shandong_pop)[1] <- "Year"
shandong_pop$Year <- 1949:2017
names(guangdong_pop)[1] <- "Year"
guangdong_pop$Year <- 1949:2017
# Join into one big population dataset
population <- china_pop %>% left_join(shandong_pop, by = "Year") %>% left_join(guangdong_pop, by = "Year") %>% left_join(liaoning_pop, by = "Year")
# Graph the province populations
ggplot(data = population, aes(x = Year)) +
# geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons, color = "China's Total Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Shandong, color = "Shandong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Guangdong, color = "Guangdong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Liaoning, color = "Liaoning's Population")) +
ggtitle("Province vs Total Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
# Join into one big population dataset
population <- china_pop %>% left_join(shandong_pop, by = "Year") %>% left_join(guangdong_pop, by = "Year") %>% left_join(liaoning_pop, by = "Year") %>%
filter(Year >= 1980)
# Graph the province populations
ggplot(data = population, aes(x = Year)) +
# geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons, color = "China's Total Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Shandong, color = "Shandong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Guangdong, color = "Guangdong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Liaoning, color = "Liaoning's Population")) +
ggtitle("Province Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
# Join into one big population dataset
population <- china_pop %>% left_join(shandong_pop, by = "Year") %>% left_join(guangdong_pop, by = "Year") %>% left_join(liaoning_pop, by = "Year")
# Graph the province populations
ggplot(data = population, aes(x = Year)) +
# geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons, color = "China's Total Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Shandong, color = "Shandong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Guangdong, color = "Guangdong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Liaoning, color = "Liaoning's Population")) +
ggtitle("Province Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
colnames(ratio_df)
# Graph the provine outputs
ggplot(data = ratio_df, aes(x = Year)) +
geom_line(mapping = aes(y = Guangdong_Output), color = "Guangdong's Output") +
geom_line(mapping = aes(y = Shandong_Output), color = "Shandong's Output") +
geom_line(mapping = aes(y = Liaoning_Output), color = "Liaoning's Output") +
ggtitle("Province Output") +
labs(y = "Output", colour = "Provinces")
ggplot(data = population, aes(x = Year)) +
# geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons, color = "China's Total Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Shandong, color = "Shandong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Guangdong, color = "Guangdong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Liaoning, color = "Liaoning's Population")) +
ggtitle("Province Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
# Graph the provine outputs
ggplot(data = ratio_df, aes(x = Year)) +
geom_line(mapping = aes(y = Guangdong_Output), color = "Guangdong's Output") +
geom_line(mapping = aes(y = Shandong_Output), color = "Shandong's Output") +
geom_line(mapping = aes(y = Liaoning_Output), color = "Liaoning's Output") +
ggtitle("Province Output") +
labs(y = "Output", colour = "Provinces")
ggplot(data = ratio_df, aes(x = Year)) +
geom_line(mapping = aes(y = Guangdong_Output))
ggplot(data = ratio_df, aes(x = Year)) +
geom_line(mapping = aes(y = Guangdong_Output), color = "Guangdong's Output") +
geom_line(mapping = aes(y = Shandong_Output), color = "Shandong's Output") +
geom_line(mapping = aes(y = Liaoning_Output), color = "Liaoning's Output") +
ggtitle("Province Output") +
labs(y = "Output", colour = "Provinces")
# Graph the province populations
ggplot(data = population, aes(x = Year)) +
# geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons, color = "China's Total Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Shandong, color = "Shandong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Guangdong, color = "Guangdong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Liaoning, color = "Liaoning's Population")) +
ggtitle("Province Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
# Graph the provine outputs
ggplot(data = na.omit(ratio_df), aes(x = Year)) +
geom_line(mapping = aes(y = Guangdong_Output), color = "Guangdong's Output") +
geom_line(mapping = aes(y = Shandong_Output), color = "Shandong's Output") +
geom_line(mapping = aes(y = Liaoning_Output), color = "Liaoning's Output") +
ggtitle("Province Output") +
labs(y = "Output", colour = "Provinces")
# Graph the provine outputs
ggplot(data = na.omit(ratio_df), aes(x = Year)) +
geom_line(aes(y = Guangdong_Output), color = "Guangdong's Output") +
geom_line(aes(y = Shandong_Output), color = "Shandong's Output") +
geom_line(aes(y = Liaoning_Output), color = "Liaoning's Output") +
ggtitle("Province Output") +
labs(y = "Output", colour = "Provinces")
liaoning_pop <- read.csv("Liaoning Population.csv", header = TRUE, stringsAsFactors = FALSE)
shandong_pop <- read.csv("Shandong Population.csv", header = TRUE, stringsAsFactors = FALSE)
guangdong_pop <- read.csv("Guangdong Population.csv", header = TRUE, stringsAsFactors = FALSE)
china_pop <- read.csv("National Population.csv", header = TRUE, stringsAsFactors = FALSE)
# Fix Year column in datasets
names(china_pop)[1] <- "Year"
china_pop$Year <- 1949:2017
names(shandong_pop)[1] <- "Year"
shandong_pop$Year <- 1949:2017
names(guangdong_pop)[1] <- "Year"
guangdong_pop$Year <- 1949:2017
# Join into one big population dataset
population <- china_pop %>% left_join(shandong_pop, by = "Year") %>% left_join(guangdong_pop, by = "Year") %>% left_join(liaoning_pop, by = "Year")
# Graph the province populations
ggplot(data = population, aes(x = Year)) +
# geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons, color = "China's Total Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Shandong, color = "Shandong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Guangdong, color = "Guangdong's Population")) +
geom_line(mapping = aes(y = Total_Permanent_Population_Year_End_10000_Persons_Liaoning, color = "Liaoning's Population")) +
ggtitle("Province Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
# Graph the provine outputs
ggplot(data = na.omit(ratio_df), aes(x = Year)) +
geom_line(mapping = aes(y = Guangdong_Output, color = "Guangdong's Output")) +
geom_line(mapping = aes(y = Shandong_Output, color = "Shandong's Output")) +
geom_line(mapping = aes(y = Liaoning_Output, color = "Liaoning's Output")) +
ggtitle("Province Output") +
labs(y = "Output", colour = "Provinces")
colnames(population)
population[Total_Permanent_Population_Year_End_10000_Persons_Guangdong == intersect(population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong), "Year"]
population["Total_Permanent_Population_Year_End_10000_Persons_Guangdong" == intersect(population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong), "Year"]
intersect(population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong)
intersect(na.omit(population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong), na.omit(population$Total_Permanent_Population_Year_End_10000_Persons_Shandong))
? intersect
? match
match(population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong, population$Total_Permanent_Population_Year_End_10000_Persons_Shandong)
match(na.omit(population$Total_Permanent_Population_Year_End_10000_Persons_Guangdong), na.omit(population$Total_Permanent_Population_Year_End_10000_Persons_Shandong))
population["Total_Permanent_Population_Year_End_10000_Persons_Guangdong", "Year" == 2005]
population[["Total_Permanent_Population_Year_End_10000_Persons_Guangdong", "Year" == 2005]]
population["Total_Permanent_Population_Year_End_10000_Persons_Guangdong", "Year" == 2005][1]
population["Total_Permanent_Population_Year_End_10000_Persons_Guangdong", "Year" == 2005]
head(population["Total_Permanent_Population_Year_End_10000_Persons_Guangdong", "Year" == 2005])
population[, "Year" == 2005]
population["Year" == 2005, "Total_Permanent_Population_Year_End_10000_Persons_Guangdong"]
population[population$Year == 2005, "Total_Permanent_Population_Year_End_10000_Persons_Guangdong"]
population[population$Year == 2005, "Total_Permanent_Population_Year_End_10000_Persons_Shandong"]
population[population$Year == 2006, "Total_Permanent_Population_Year_End_10000_Persons_Shandong"]
population[population$Year == 2006, "Total_Permanent_Population_Year_End_10000_Persons_Guangdong"]
population[population$Year == 2007, "Total_Permanent_Population_Year_End_10000_Persons_Guangdong"]
population[population$Year == 2007, "Total_Permanent_Population_Year_End_10000_Persons_Shandong"]
population[population$Year == 2004, "Total_Permanent_Population_Year_End_10000_Persons_Guangdong"]
population[population$Year == 2004, "Total_Permanent_Population_Year_End_10000_Persons_Shandong"]
library(styler)
style_file("grouplab1.Rmd")
library(tidyverse)
library(dplyr)
library(tibble)
library(kableExtra) # for dataframe visualization
options(warn = -1) # supresses warnings
knitr::opts_chunk$set(echo = TRUE)
# Read in the dataset
obj1 <- read.csv("China_EO_49to17.csv")
data <- as_tibble(obj1)
enterprise <- data %>% select(contains("Enterprise"), "Year")
View(enterprise)
enterprise <- data %>% select("Year", contains("Enterprise"))
View(enterprise)
enterprise[[2]]
ncol(enterprise)
enterprise[1]
colnames(enterprise)
plot <- ggplot(enterprise, aes(x = Year))
for (i in (ncol(enterprise) - 1)) {
plot + geom_line(mapping = aes(y = enterprise[[i + 1]], color = gsub("_", " ", colnames(enterprise[i + 1]))))
}
plot
ggplot(enterprise, aes(x = Year)) + geom_line(mapping = aes(y = enterprise[[1 + 1]], color = gsub("_", " ", colnames(enterprise[1 + 1]))))
plot <- ggplot(enterprise, aes(x = Year))
for (i in (ncol(enterprise) - 1)) {
plot <- plot + geom_line(mapping = aes(y = enterprise[[i + 1]], color = gsub("_", " ", colnames(enterprise[i + 1]))))
}
plot <- plot + ggtitle("Province Enterprises") + labs(y = "Enterprise", colour = "Provinces")
plot
plot <- ggplot(enterprise, aes(x = Year))
for (i in (ncol(enterprise) - 1)) {
plot <- plot + geom_line(mapping = aes(y = enterprise[[i + 1]], color = gsub("_", " ", colnames(enterprise[i + 1]))))
}
View(plot)
View(plot)
View(plot)
plot
plot <- ggplot(enterprise, aes(x = Year))
for (i in (ncol(enterprise) - 1)) {
plot <- plot + geom_line(mapping = aes(y = enterprise[[i + 1]], color = gsub("_", " ", colnames(enterprise[i + 1]))))
}
plot <- plot + ggtitle("Province Enterprises") + labs(y = "Enterprise", colour = "Provinces")
plot
install.packages(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library(tidyverse)
library(reshape2)
install.packages("reshape2")
library(reshape2)
ncol(enterprise)
colnames(enterprise)[2:32]
library(tidyverse)
library(dplyr)
library(tibble)
library(reshape2)
library(kableExtra) # for dataframe visualization
options(warn = -1) # supresses warnings
knitr::opts_chunk$set(echo = TRUE)
# Read in the dataset
obj1 <- read.csv("China_EO_49to17.csv")
data <- as_tibble(obj1)
new_enterprise <- enterprise %>% melt(id.vars = "Year", measure.vars = colnames(enterprise)[2:32])
View(new_enterprise)
ggplot(new_enterprise, aes(x = Year, y = value, fill = variable)) + geom_line();
ggplot(new_enterprise, aes(x = Year, y = value, fill = variable)) + geom_line()
ggplot(new_enterprise, aes(x = Year, y = value, fill = variable)) +
geom_line() +
ggtitle("Province Enterprises") +
labs(y = "Enterprise", colour = "Provinces")
ggplot(new_enterprise, aes(x = Year, y = value, color = variable)) +
geom_line() +
ggtitle("Province Enterprises") +
labs(y = "Enterprise", colour = "Provinces")
ggplot(new_enterprise, aes(x = Year, y = value, color = gsub("_", " ", variable))) +
geom_line() +
ggtitle("Province Enterprises") +
labs(y = "Enterprise", colour = "Provinces")
View(population)
colnames(population)
ggplot(data = population, aes(x = Year, y = Total_Permanent_Population_Year_End_10000_Persons)) + geom_line()
ggplot(data = population, aes(x = Year, y = Total_Permanent_Population_Year_End_10000_Persons)) +
geom_line() +
ggtitle("National Population") +
labs(y = "Population (10,000 Person)", colour = "Provinces")
ggplot(data = population, aes(x = Year, y = Total_Permanent_Population_Year_End_10000_Persons)) +
geom_line() +
ggtitle("National Population") +
labs(y = "Population (10,000 Person)")
# Enterprise data
enterprise <- data %>% select("Year", contains("Enterprise"))
# Format enterprise data to be easily graphable
new_enterprise <- enterprise %>% melt(id.vars = "Year", measure.vars = colnames(enterprise)[2:32])
ggplot(new_enterprise, aes(x = Year, y = value, color = gsub("_Enterprise", " ", variable))) +
geom_line() +
ggtitle("Province Enterprises") +
labs(y = "Enterprise", colour = "Provinces")
ggplot(new_enterprise, aes(x = Year, y = na.omit(value), color = gsub("_Enterprise", " ", variable))) +
geom_line() +
ggtitle("Province Enterprises") +
labs(y = "Enterprise", colour = "Provinces")
# Format enterprise data to be easily graphable
new_enterprise <- enterprise %>% melt(id.vars = "Year", measure.vars = colnames(enterprise)[2:32], na.rm = FALSE)
View(new_enterprise)
# Format enterprise data to be easily graphable
new_enterprise <- enterprise %>% melt(id.vars = "Year", measure.vars = colnames(enterprise)[2:32], na.rm = TRUE)
View(new_enterprise)
View(new_enterprise)
# Format enterprise data to be easily graphable
new_enterprise <- enterprise %>% melt(id.vars = "Year", measure.vars = colnames(enterprise)[2:32])
# Narrow down the graph to after the 2000s and more than 25,000
narrow_enter <- new_enterprise %>% filter(Year >= 2000, value >= 25000)
View(narrow_enter)
dip_enter <- new_enterprise %>% filter(Year >= 1990, variable == unique(variable))
View(dip_enter)
dip_enter <- new_enterprise %>% filter(Year >= 1990, variable == unique(narrow_enter$variable))
dip_enter <- new_enterprise %>% filter(variable == unique(narrow_enter$variable))
ggplot(dip_enter, aes(x = Year, y = value, color = gsub("_Enterprise", " ", variable))) +
geom_line() +
ggtitle("Province Enterprises (1990 to 2017)") +
labs(y = "Enterprise", colour = "Provinces")
unique(narrow_enter$variable)
